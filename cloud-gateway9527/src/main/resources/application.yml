server:
  port: 9527

spring:
  application:
    name: cloud-gateway # 以微服务注册进consul服务列表内
  cloud:
    consul: # 配置consul地址
      host: localhost
      port: 8500
      discovery:
        prefer-ip-address: true
        service-name: ${spring.application.name}
    gateway:
      routes: # - 表示一个新的列表项
        - id: pay_routh1 #pay_routh1                # 路由的ID(类似mysql主键ID)，没有固定规则但要求唯一，建议配合服务名
#          uri: http://localhost:8001                # 匹配后提供服务的路由地址
          uri: lb://cloud-payment-service          # 匹配后提供服务的路由地址
          predicates: # 多个断言之间通过 and 逻辑与 来连接的
            - Path=/pay/gateway/get/**              # 断言，路径相匹配的进行路由
            - After=2024-12-18T15:45:50.548561200+05:00[Asia/Yekaterinburg] # 表示当请求的时间在指定时间之后 路由才会匹配
#            - Before=2024-12-18T15:50:50.548561200+05:00[Asia/Yekaterinburg]
#            - Cookie=username,jjLin # username 为cookie的name  jjLin 是cookie值 是一个正则表达式
#            - Header=X-Request-Id, \d+
#            - Host=**.jlf.com # 匹配HTTP请求的Host头部 Host在HTTP请求的 Headers中
#            - Query=username, \d+ # 要求带有query参数 参数名为username 值为匹配正则表达式 \d+ 的值
#            - RemoteAddr=172.20.10.4/24 # 用于从请求的远程地址（客户端的 IP 地址）中提取并匹配 IP 地址
#            - My=diamond # 自定义断言
#            - name: My
#              args:
#                userType: diamond

        - id: pay_routh2 #pay_routh2                # 路由的ID(类似mysql主键ID)，没有固定规则但要求唯一，建议配合服务名
#          uri: http://localhost:8001                # 匹配后提供服务的路由地址
          uri: lb://cloud-payment-service          # 匹配后提供服务的路由地址 使用服务名称 而不是具体的uri地址
          predicates:
            - Path=/pay/gateway/info/**              # 断言，路径相匹配的进行路由
        - id: pay_routh3
          uri: lb://cloud-payment-service
          predicates:
            - Path=/pay/gateway/filter/**
#            - Path=/gateway/filter/**
#            - Path=/XYZ/abc/{segment} # 原始地址 断言 配合SetPath使用
          filters: # 添加请求头参数
            # - AddRequestHeader=X-Request-jjLin1,jjLin1 # 请求头 key-value , 若一行含多个 则重写一行进行设置
            # - AddRequestHeader=X-Request-jjLin2,jjLin2
            # - RemoveRequestHeader=sec-fetch-site # 移除请求头为 sec-fetch-site
            # - SetRequestHeader=sec-fetch-mode, JJJ # 设置或修改请求头的参数
            # - AddRequestParameter=red, blue
            # - RemoveRequestParameter=username
            # - AddResponseHeader=X-Response-jlf, BlueResponse
            # - SetResponseHeader=Date,2099-11-11
            # - RemoveResponseHeader=Content-Type # 将默认自带Content-Type回应属性删除
            # - PrefixPath=/pay # 添加路由前缀
            # - SetPath=/pay/gateway/{segment} # {segment} 表示占位符 修改请求路径的过滤器
            # - RedirectTo=302, https://www.baidu.com/ # 重定向到某个地址
